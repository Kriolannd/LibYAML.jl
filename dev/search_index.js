var documenterSearchIndex = {"docs":
[{"location":"#LibYAML.jl","page":"Home","title":"LibYAML.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Julia wrapper package for parsing yaml files","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install LibYAML, simply use the Julia package manager:","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add LibYAML","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using LibYAML\n\nyaml_str = \"\"\"\nretCode: 0\nretMsg: \"OK\"\nresult:\n  ap: 0.6636\n  bp: 0.6634\n  h: 0.6687\n  l: 0.6315\n  lp: 0.6633\n  o: 0.6337\n  qv: 1.1594252877069e7\n  s: \"ADAUSDT\"\n  t: \"2024-03-25T19:05:35.491000064\"\n  v: 1.780835204e7\nretExtInfo: {}\ntime: \"2024-03-25T19:05:38.912999936\"\n\"\"\"\n\njulia> parse_yaml(yaml_str)\n1-element Vector{Dict{Any, Any}}:\n Dict(\n  \"retExtInfo\" => Dict{Any, Any}(),\n  \"time\" => \"2024-03-25T19:05:38.912999936\",\n  \"retCode\" => \"0\",\n  \"retMsg\" => \"OK\",\n  \"result\" => Dict{Any, Any}(\"v\" => \"1.780835204e7\", \"ap\" => \"0.6636\", \"o\" => \"0.6337\", \"t\" => \"2024-03-25T19:05:35.491000064\", \"qv\" => \"1.1594252877069e7\", \"bp\" => \"0.6634\", \"l\" => \"0.6315\", \"lp\" => \"0.6633\", \"h\" => \"0.6687\", \"s\" => \"ADAUSDT\"…))","category":"page"},{"location":"#Useful-Links","page":"Home","title":"Useful Links","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"libyaml – Official library repository.  \nLibYAML_jll.jl – Julia wrapper for libyaml.","category":"page"},{"location":"pages/api_reference/#API-Reference","page":"Content","title":"API Reference","text":"","category":"section"},{"location":"pages/api_reference/#YAML-parser","page":"Content","title":"YAML parser","text":"","category":"section"},{"location":"pages/api_reference/#LibYAML.ParserYAML.parse_yaml","page":"Content","title":"LibYAML.ParserYAML.parse_yaml","text":"parse_yaml(yaml_str::String)\nparse_yaml(yaml_str::Vector{UInt8})\n\nParse a YAML string or file (or vector of UInt8) into a dictionary, vector or nothing. \n\nIf a given YAML document contains a dictionary, the parser returns a dictionary.\nIf a given YAML document contains just a list of variables, the parser returns a vector.\nIf a given YAML document contains no information (i.e. empty), the parser returns nothing\n\nor empty dictionary.\n\nReturns a sequence of documents parsed from YAML string given.\n\nExamples\n\njulia> yaml_str = \"\"\"\n        name: Alice\n        array: \n          - 1\n          - 2\n          - a: 3 \n            b: null\n        dict: \n          a: 1\n          b: \n            - w\n            - d\n       \"\"\";\n\njulia> parse_yaml(yaml_str)\nDict{String, Any}(\n    \"dict\" => Dict{Any, Any}(\n        \"b\" => Any[\"w\", \"d\"], \n        \"a\" => \"1\"\n    ), \n    \"name\" => \"Alice\", \n    \"array\" => Any[\"1\", \"2\", Dict{Any, Any}(\"b\" => \"null\", \"a\" => \"3\")]\n)\n\n\n\n\n\n","category":"function"},{"location":"pages/api_reference/#LibYAML.ParserYAML.open_yaml","page":"Content","title":"LibYAML.ParserYAML.open_yaml","text":"open_yaml(path::AbstractString)\n\nRead a YAML file from a given path and parse it.\n\n\n\n\n\nopen_yaml(io::IO)\n\nReads a YAML file from a given io and parse it.\n\n\n\n\n\n","category":"function"}]
}
